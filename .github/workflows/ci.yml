name: 'CI'
on:
  push:
    branches: [ "master-1.12" ]
jobs:
  build:
    env:
      VERSION_SUFFIX: -SNAPSHOT
    name: Build
    runs-on: ubuntu-latest
    if: ${{!startsWith(github.event.head_commit.message, 'ci')}}
    steps:
    - if: startsWith(github.ref, 'refs/tags/')
      id: set_suffix_if_tagged
      run: |
        echo "VERSION_SUFFIX=" >> $GITHUB_ENV

    - uses: actions/checkout@v3

    - name: Cache
      uses: actions/cache@v3.2.3
      with:
        path: |
          ~/.m2
          ~/.gradle
        key: ${{ runner.os }}-gradle-${{ hashFiles('build.gradle') }}

    - name: Validate Gradle wrapper
      uses: gradle/wrapper-validation-action@v1

    - uses: actions/setup-java@v3
      with:
        distribution: temurin
        java-version: 17

    - name: Decode Keystore
      id: decode
      uses: timheuer/base64-to-file@v1.2
      with:
        fileName: 'keyring.gpg'
        encodedString: ${{ secrets.SIGNING_SECRET_KEY_RING_FILE }}

    - name: Expose
      run: cp ${{ steps.decode.outputs.filePath }} .

    - uses: gradle/gradle-build-action@v2
      if:  ${{ !startsWith(github.ref, 'refs/tags/') }}
      with:
        arguments: build

    - uses: gradle/gradle-build-action@v2
      if: startsWith(github.ref, 'refs/tags/')
      with:
        arguments: build createChangelog

    - name: Create Release
      id: release
      uses: softprops/action-gh-release@v0.1.15
      if: startsWith(github.ref, 'refs/tags/')
      with:
        body_path: ${{ github.workspace }}/changelog/*.md

    - name: Publish Release
      uses: gradle/gradle-build-action@v2
      if: steps.release.outcome == 'success'
      env:
        CURSE_TOKEN: ${{ secrets.CURSE_TOKEN }}
        MODRINTH_TOKEN: ${{ secrets.MODRINTH_TOKEN }}
      with:
        arguments: pubishToAll

    - name: 'Deploy to Nexus'
      uses: gradle/gradle-build-action@v2
      env:
        NEXUS_USER: ${{ secrets.NEXUS_USER }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
      with:
        arguments: publishToGalacticMaven -Pversion_suffix=${{ env.VERSION_SUFFIX }}
