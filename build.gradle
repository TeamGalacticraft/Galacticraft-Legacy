buildscript {
	repositories {
		jcenter()
		maven {
			name = "forge"
			url = "https://files.minecraftforge.net/maven"
		}
	}
	dependencies {
		classpath 'net.minecraftforge.gradle:ForgeGradle:2.3-SNAPSHOT'
	}
}

plugins {
    id 'java'
    id 'eclipse'
    id 'idea'
    id "se.bjurr.gitchangelog.git-changelog-gradle-plugin" version "1.71.4"
}

defaultTasks 'fullBuild'
apply plugin: 'net.minecraftforge.gradle.forge'

def versionBuild = 0
if (System.getenv("BUILD_NUMBER") != null)
	versionBuild = System.getenv("BUILD_NUMBER")

version = "${versionMajor}.${versionMinor}.${versionRev}.${versionBuild}" // Set the version number
group= "micdoodle8.mods.galacticraft"
archivesBaseName = "GalacticraftAll"

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

minecraft {
	version = "${mc_version}-${forge_version}"
	coreMod = 'micdoodle8.mods.miccore.MicdoodlePlugin'
	mappings = "${mcp}"
	runDir = "run"
	useDepAts = true
	
	def args = [
		"-Dfml.coreMods.load=micdoodle8.mods.miccore.MicdoodlePlugin"
	]
	clientJvmArgs.addAll(args)
	serverJvmArgs.addAll(args)
  	if (project.hasProperty('mc_uuid')) {
    	clientRunArgs += ['--uuid', project.mc_uuid]
  	}
	makeObfSourceJar = false
	
	replace '-1', versionBuild
	replaceIn "Constants.java"
}

repositories {
	maven { url 'https://www.cursemaven.com' }
	maven { url 'https://mod-buildcraft.com/maven/' }
	maven { url 'http://maven.ic2.player.to' }
	maven { url 'http://dvs1.progwml6.com/files/maven' }
}

dependencies {
	
	compileOnly 'curse.maven:bop-7.0.1.2444-220318:2842510'
	compileOnly 'curse.maven:mekanism-9.8.3.390-268560:2835176'
	compileOnly 'curse.maven:ae2-rv6-stable-7-223794:2747063'
	compileOnly 'curse.maven:redstoneflux-1.1.1-270789:2920436'
	compileOnly 'curse.maven:actuallyadditions-r152-228404:3117927'
	compileOnly 'curse.maven:playerapi-1.1-449521:3212872'

	compileOnly 'com.mod-buildcraft:buildcraft-api:7.99.24.6'
	compileOnly 'net.industrial-craft:industrialcraft-2:2.8.221-ex112:api'
	
	compileOnly 'mezz.jei:jei_1.12.2:4.16.1.302:api'
	runtimeOnly 'mezz.jei:jei_1.12.2:4.16.1.302'
}

processResources {
    inputs.property "version", project.version
    inputs.property "mc_version", mc_version

    from(sourceSets.main.resources.srcDirs) {
        include "mcmod.info"
        expand "version": project.version, "mc_version": mc_version
    }
    from(sourceSets.main.resources.srcDirs) {
        exclude 'mcmod.info'
    }
}

task fullBuild(type: Delete) {
    delete jar
    dependsOn "build"
}

tasks.withType(JavaCompile) {
    options.compilerArgs += ['-Xlint:all', '-Xlint:-path', '-parameters']
    options.deprecation = true
    options.encoding = 'UTF-8'
}


def getManifestAttributes(String title) {
    return [
            "Specification-Title"     : title,
            "Specification-Vendor"    : "Galacticraft",
            "Specification-Version"   : "${project.version}",
            "Implementation-Title"    : title,
            "Implementation-Version"  : "${project.version}",
            "Implementation-Vendor"   : "Galacticraft",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
    ]
}

task generateChangelog(type: se.bjurr.gitchangelog.plugin.gradle.GitChangelogTask) {
    group = 'script-tasks'
    description = 'Generates Changelog for provided Version'

    fromRepo = file(".");
    settingsFile = file("changelog.json").getAbsolutePath();
    file = file("${projectDir}/CHANGELOG-${project.version}.md");
    templateContent = file('changelog.mustache').getText('UTF-8');
}

ext.artifactsList = []

apply from: 'etc/scripts/main-artifacts.gradle'
apply from: 'etc/scripts/deobf-artifacts.gradle'
apply from: 'etc/scripts/utils.gradle'
